name: Release OS images

on:
  workflow_dispatch:
    # Enable manual trigger of this action.
    inputs:
      user:
        description: Container registry user.
        default: weaveworks
        required: true

env:
  DOCKER_USER: ${{ github.event.inputs.user }}

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    env:
      WHAT: ubuntu
      RELEASE: latest
      IS_MANIFEST_LIST: 1
    steps:
      - uses: actions/checkout@v2
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
      - name: Build amd64 image
        env:
          GOARCH=amd64
        run: cd images && make build && make push
      - name: Build arm64 image
        env:
          GOARCH=arm64
        run: cd images && make build && make push

  centos:
    runs-on: ubuntu-latest
    env:
      WHAT: centos
      RELEASE: latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
      - name: Build amd64 image
        env:
          GOARCH=amd64
        run: cd images && make build && make push

  amazonlinux:
    runs-on: ubuntu-latest
    env:
      WHAT: amazonlinux
      RELEASE: latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
      - name: Build amd64 image
        env:
          GOARCH=amd64
        run: cd images && make build && make push
      - name: Build arm64 image
        env:
          GOARCH=arm64
        run: cd images && make build && make push

  opensuse:
    runs-on: ubuntu-latest
    env:
      WHAT: opensuse
      RELEASE: tumbleweed
    steps:
      - uses: actions/checkout@v2
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
      - name: Build amd64 image
        env:
          GOARCH=amd64
        run: cd images && make build && make push
      - name: Build arm64 image
        env:
          GOARCH=arm64
        run: cd images && make build && make push

  kubeadm:
    runs-on: ubuntu-latest
    env:
      WHAT: kubeadm
      RELEASE: latest
      IS_MANIFEST_LIST: 1
    steps:
      - uses: actions/checkout@v2
      - name: Login to container registry
        uses: docker/login-action@v1
        with:
          registry: docker.io
          username: ${{ secrets.CR_USER }}
          password: ${{ secrets.CR_PAT }}
      - name: Build amd64 image
        env:
          GOARCH=amd64
        run: cd images && make build && make push
      - name: Build arm64 image
        env:
          GOARCH=arm64
        run: cd images && make build && make push

  # aline:
  #   runs-on: ubuntu-latest
  #   env:
  #     WHAT: alpine
  #     RELEASE: latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Login to container registry
  #       uses: docker/login-action@v1
  #         with:
  #         registry: docker.io
  #         username: ${{ secrets.CR_USER }}
  #         password: ${{ secrets.CR_PAT }}
  #     - name: Build amd64 image
  #       env:
  #         GOARCH=amd64
  #       run: cd images && make build
  #     - name: Build arm64 image
  #       env:
  #         GOARCH=arm64
  #       run: cd images && make build
